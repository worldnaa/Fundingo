<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FundingMapper">
 	

	<resultMap id="fundingSelectMap" type="funding">
		<result property="fundNo" 		column="fund_no" 		jdbcType="NUMERIC"/>
		<result property="fundAmount"	column="fund_amount" 	jdbcType="NUMERIC" />
		<result property="userNo" 		column="user_no" 		jdbcType="NUMERIC" />
		<result property="fundDate" 	column="fund_date" 		jdbcType="DATE" />
		<result property="deliveryFee" 	column="delivery_fee" 	jdbcType="NUMERIC" />
		<result property="couponNo" 	column="coupon_no" 		jdbcType="NUMERIC" />
		<result property="payMethod" 	column="pay_method" 	jdbcType="CHAR" />
		<result property="addr" 		column="addr" 			jdbcType="VARCHAR"  />
		<result property="postNo" 		column="post_no" 		jdbcType="CHAR" />
		<result property="deliveryReq" 	column="delivery_req" 	jdbcType="VARCHAR" />
		<result property="recipName" 	column="recip_name" 	jdbcType="VARCHAR" />
		<result property="recipPhone" 	column="recip_phone" 	jdbcType="VARCHAR" />
		<result property="purchaseStatus" 	column="purchase_status" 	jdbcType="CHAR"  />
		<result property="deliveryStatus" 	column="delivery_status" 	jdbcType="CHAR" />
		<result property="trackingNo" 		column="tracking_no" 		jdbcType="VARCHAR" />
		<result property="project.category" column="category"	jdbcType="CHAR"/>
		<result property="project.pjtName"	column="pjt_name"	jdbcType="VARCHAR"/>
		<result property="project.pjtStatus" column="pjt_status" jdbcType="CHAR"/>
		<result property="project.sellerName" column="seller_name" jdbcType="VARCHAR"/>
		<result property="project.endDate" column="end_date" 		jdbcType="DATE"/>
		<result property="project.pjtNo" column="pjt_no" 		jdbcType="NUMERIC"/>
	</resultMap>

	<resultMap id="fundedProductSelectMap" type="FundedProduct">
		<result property="fpNo" 			column="fp_no" 			jdbcType="NUMERIC"/>
		<result property="fundNo"			column="fund_no" 		jdbcType="NUMERIC" />
		<result property="prodNo" 			column="prod_no" 		jdbcType="NUMERIC" />		
		<result property="prodQuantity" 	column="prod_quantity" 	jdbcType="NUMERIC" />
		<result property="product.prodName"	column="prod_name"	 	jdbcType="VARCHAR"/>
		<result property="product.price"	column="price"	 		jdbcType="NUMERIC"/><!-- 07/21 추가 -->		
	</resultMap>

	<!-- SQL : INSERT -->
	<!-- 펀딩하기 -->
	<insert 	id="addFund"		parameterType="funding" 
				useGeneratedKeys="true" keyColumn="fund_no" keyProperty="fundNo">
	 	INSERT
		INTO funding (fund_no, fund_amount, user_no, fund_date, delivery_fee, pay_method, addr, 
						post_no, delivery_req, recip_name, recip_phone, purchase_status, delivery_status, tracking_no, pjt_no )
		VALUES ( seq_funding_fund_no.NEXTVAL, #{fundAmount}, #{userNo}, SYSDATE,
				3000, '1', #{addr}, #{postNo}, #{deliveryReq:VARCHAR}, #{recipName}, #{recipPhone},
				'0', '0', #{trackingNo:VARCHAR}, #{pjtNo:NUMERIC})
				
	 </insert>
	 
	
	 <!-- 펀딩한 상품 등록(결제완료시)-->

 	<insert 	id="addFundedProduct"		parameterType="fundedProduct" >	 
		INSERT
		INTO funded_product (fp_no, fund_no, prod_no, prod_quantity)
		VALUES (seq_funded_product_fp_no.NEXTVAL, #{fundNo}, #{prodNo}, #{prodQuantity})
	 </insert>


	<!-- SQL : SELECT LIST -->
	<!-- 펀딩 목록 조회 -->
	<select  id="getFundList"  parameterType="map"	resultMap="fundingSelectMap">
	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT
            							project.category, project.pjt_status, project.pjt_name, project.seller_name, 
            							funding.fund_date, funding.purchase_status, funding.fund_no, project.pjt_no
           								FROM funding, project
            							WHERE funding.pjt_no = project.pjt_no
            							AND funding.user_no = #{userNo}                               
										
										<!-- <if test="searchCondition != null">
												
													<choose>
													<when test="searchCondition == 0 and searchKeyword !='' ">
										 				and funding.fund_no LIKE '%${searchKeyword}%'
													</when>
													<when test="searchCondition == 1 and searchKeyword !='' ">
										 				and project.pjt_name LIKE '%${searchKeyword}%'
													</when>
													<when test="searchCondition == 2 and searchKeyword !='' ">
										 				and project.seller_name LIKE '%${searchKeyword}%'
													</when>
													</choose>
												
										</if> -->
									
										ORDER BY fund_no desc ) inner_table
						  <!--  WHERE ROWNUM &lt;= #{endRowNum}--> )
		<!--  WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} --> 
	 </select>	
	 
 	<!-- SQL : SELECT ONE -->
 	<!-- 펀딩 상세조회 -->
	 <select 	id="getFund"	parameterType="map"	resultMap="fundingSelectMap">
		SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	
										SELECT project.category, project.pjt_status, project.pjt_name, project.seller_name, 
											funding.fund_no, funding.fund_date, project.end_date, funding.purchase_status,		
											funding.delivery_status, funding.coupon_no, funding.delivery_fee, funding.fund_amount, 
											funding.pay_method, funding.recip_name, funding.recip_phone, funding.addr, funding.post_no,
											funding.delivery_req		
										FROM funding, funded_product, product, project
										WHERE funding.fund_no = funded_product.fund_no
										AND funded_product.prod_no = product.prod_no
										AND product.pjt_no = project.pjt_no
										AND funding.fund_no = #{fundNo}  ) INNER_TABLE
					WHERE ROWNUM &lt;= 1				
	 </select><!-- sql 수정함 07/21 -->

	<!-- 펀딩한 상품 리스트 조회-->
	<select id="getFpList"	parameterType="int"	resultMap="fundedProductSelectMap">
		SELECT
		funded_product.fund_no, funded_product.prod_no, product.prod_name, product.price, funded_product.prod_quantity
		FROM funded_product, product
		WHERE product.prod_no = funded_product.prod_no 
		AND fund_no = #{value}
	</select>					<!-- sql 수정함 07/21 -->
	

	<!-- SQL : UPDATE -->
	<!-- 배송정보 변경 -->
	<update id="updateFund"		parameterType="funding">
		UPDATE funding
		SET recip_name = #{recipName}, recip_phone = #{recipPhone},
		addr = #{addr}, post_no = #{postNo}, delivery_req = #{deliveryReq}
		WHERE fund_no = #{fundNo}
	</update>
	
	
	<!-- 결제취소 -->
	<!--  <update id="cancelFund"		parameterType="funding">
		UPDATE funding
		SET purchase_Status = '1'
		WHERE fund_no = #{fundNo}
	</update>-->
	
	<!-- 간편결제 등록 -->
	<update id="addEasyPay"		parameterType="user">
		UPDATE users
		SET easypay_card_no = #{easypayCardNo}, easypay_card_valid = #{easypayCardValid},
		easypay_card_pwd =  #{easypayCardPwd}, easypay_pwd = #{easypayPwd}
		WHERE user_no = #{userNo}
	</update>
	
	
	<!-- 배송정보 등록 -->
	<update id="updateAddr"		parameterType="user">
		UPDATE users
		SET recip_name = #{recipName}, recip_phone = #{recipPhone},
		addr = #{addr}, post_no = #{postNo}, delivery_req = #{deliveryReq}
		WHERE user_no = #{userNo}
	</update>
	

	<!-- SQL : DELETE -->
	<!-- 간편결제 삭제(=수정) -->
	<update id="deleteEasyPay"		parameterType="user">
		UPDATE users
		SET EASYPAY_CARD_NO = '', EASYPAY_CARD_VALID = null, EASYPAY_CARD_PWD = null, EASYPAY_PWD = null
		WHERE user_no = #{userNo}
	</update>
	
	<!-- 배송정보 삭제 -->
	<update id="deleteAddr"		parameterType="user">
		UPDATE users
		SET recip_name = null, recip_phone = null,
		addr = null, post_no = null, delivery_req = null
		WHERE user_no = #{userNo}
	</update>
	
	<!-- 펀딩취소 -->
	<update id="cancelFund"		parameterType="funding">
		UPDATE funding
		SET purchase_status = '1'
		WHERE fund_no = #{fundNo}
	</update>
	<!-- 전체 게시물 수 -->
	<select id="getTotalCount" parameterType="map" resultType="int">
		SELECT
		COUNT(*)   <!-- 뽑아낸 행들의 Count -->
		FROM ( select
										project.category, project.pjt_status, project.pjt_name, project.seller_name, 
										funding.fund_date, funding.purchase_status, project.pjt_no, funded_product.fund_no as fund_no
										FROM funding , funded_product , product, project
										WHERE funding.fund_no = funded_product.fund_no
										AND funded_product.prod_no = product.prod_no
										AND project.pjt_no = product.pjt_no
										AND funding.user_no = #{userNo}
										GROUP BY project.category, project.pjt_status, project.pjt_name, project.seller_name, 
										funding.fund_date, funding.purchase_status, project.pjt_no, funded_product.fund_no                              
										
										<!-- <if test="searchCondition != null">
												
													<choose>
													<when test="searchCondition == 0 and searchKeyword !='' ">
										 				and funding.fund_no LIKE '%${searchKeyword}%'
													</when>
													<when test="searchCondition == 1 and searchKeyword !='' ">
										 				and project.pjt_name LIKE '%${searchKeyword}%'
													</when>
													<when test="searchCondition == 2 and searchKeyword !='' ">
										 				and project.seller_name LIKE '%${searchKeyword}%'
													</when>
													</choose>
												
										</if> -->
									
										ORDER BY fund_no desc ) countTable
	</select>


	<select id="getFundCountByUserNoAndPjtNo" parameterType="funding" resultType="int">
		SELECT COUNT(*)
		FROM(select p.pjt_no, f.pjt_no, u.user_no
		FROM funding f, project p, users u
		WHERE f.pjt_no = p.pjt_no AND u.user_no = f.user_no AND f.pjt_no = #{pjtNo} AND f.user_no = #{userNo})
	</select>

</mapper>
